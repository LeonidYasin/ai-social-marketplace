const https = require('https');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS
async function checkCors(url) {
  return new Promise((resolve) => {
    const options = {
      method: 'OPTIONS',
      headers: {
        'Origin': 'https://social-marketplace-frontend.onrender.com',
        'Access-Control-Request-Method': 'GET',
        'Access-Control-Request-Headers': 'Content-Type'
      }
    };

    const req = https.request(url, options, (res) => {
      console.log(`Status: ${res.statusCode}`);
      console.log('Headers:', res.headers);
      
      const corsHeaders = {
        'access-control-allow-origin': res.headers['access-control-allow-origin'],
        'access-control-allow-methods': res.headers['access-control-allow-methods'],
        'access-control-allow-headers': res.headers['access-control-allow-headers'],
        'access-control-allow-credentials': res.headers['access-control-allow-credentials']
      };
      
      console.log('CORS Headers:', corsHeaders);
      resolve({ status: res.statusCode, headers: corsHeaders });
    });

    req.on('error', (error) => {
      console.error('Error:', error.message);
      resolve({ error: error.message });
    });

    req.end();
  });
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
async function testEndpoints() {
  const baseUrl = 'https://social-marketplace-api.onrender.com';
  const endpoints = [
    '/api/health',
    '/api/users',
    '/api/posts',
    '/api/client-log'
  ];

  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS –Ω–∞ Render...\n');

  for (const endpoint of endpoints) {
    console.log(`\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${baseUrl}${endpoint}`);
    const result = await checkCors(`${baseUrl}${endpoint}`);
    
    if (result.error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
    } else if (result.status === 200) {
      console.log(`‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ`);
    } else {
      console.log(`‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: ${result.status}`);
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–µ GET –∑–∞–ø—Ä–æ—Å—ã
async function testGetRequests() {
  const baseUrl = 'https://social-marketplace-api.onrender.com';
  const endpoints = [
    '/api/health',
    '/api/users',
    '/api/posts'
  ];

  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤...\n');

  for (const endpoint of endpoints) {
    console.log(`\nüì° GET: ${baseUrl}${endpoint}`);
    
    try {
      const response = await fetch(`${baseUrl}${endpoint}`);
      console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`);
      
      if (response.ok) {
        const data = await response.json();
        console.log(`üìÑ –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data).substring(0, 100)}...`);
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É CORS –ø—Ä–æ–±–ª–µ–º –Ω–∞ Render\n');
  
  await testEndpoints();
  await testGetRequests();
  
  console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:');
  console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ backend/src/app.js –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω CORS');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ NODE_ENV=production –Ω–∞ Render');
  console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –±—ç–∫–µ–Ω–¥–∞');
  console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è REACT_APP_API_URL');
}

main().catch(console.error); 