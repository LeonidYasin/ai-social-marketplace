const ScreenshotModule = require('./screenshot-module');

async function testScreenshotModule() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤...');
    
    try {
        // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥—É–ª—è
        const module = new ScreenshotModule({
            headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            quality: 'high'
        });
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è —Ç–µ—Å—Ç–∞
        const result = await module.run({
            scenario: 'states',
            ocr: false // –û—Ç–∫–ª—é—á–∞–µ–º OCR –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
        });
        
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤: ${result.screenshots.length}`);
        console.log(`‚ùå –û—à–∏–±–æ–∫: ${result.errors.length}`);
        console.log(`‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${result.warnings.length}`);
        
        if (result.errors.length > 0) {
            console.log('\n‚ùå –û—à–∏–±–∫–∏:');
            result.errors.forEach(error => {
                console.log(`  - ${error.type}: ${error.message}`);
            });
        }
        
        console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É documentation_screenshots/ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
        
    } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testScreenshotModule(); 