const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

async function compareScreenshots() {
  console.log('üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤...');
  
  let browser;
  let page;
  
  try {
    browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });

    page = await browser.newPage();
    
    const screenshots = [
      { name: 'final_01_initial.png', description: '–ù–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω' },
      { name: 'final_02_after_login_click.png', description: '–ü–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—Ö–æ–¥–∞' }
    ];
    
    const screenshotData = [];
    
    for (const screenshot of screenshots) {
      const filePath = path.join('./test_screenshots', screenshot.name);
      
      if (fs.existsSync(filePath)) {
        console.log(`\nüì∏ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: ${screenshot.name}`);
        
        const imageBuffer = fs.readFileSync(filePath);
        const base64Image = imageBuffer.toString('base64');
        const stats = fs.statSync(filePath);
        
        screenshotData.push({
          name: screenshot.name,
          description: screenshot.description,
          base64: base64Image,
          filePath: filePath,
          fileSize: (stats.size / 1024).toFixed(1),
          creationDate: stats.birthtime.toLocaleString()
        });
        
        console.log(`   üìê –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(stats.size / 1024).toFixed(1)} KB`);
        console.log(`   üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${stats.birthtime.toLocaleString()}`);
        
      } else {
        console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${screenshot.name}`);
      }
    }
    
    if (screenshotData.length === 2) {
      // –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
      await page.setContent(`
        <html>
          <head>
            <style>
              body { margin: 0; padding: 20px; font-family: Arial, sans-serif; background: #f0f0f0; }
              .container { max-width: 1200px; margin: 0 auto; }
              .header { text-align: center; margin-bottom: 30px; }
              .comparison { display: flex; gap: 20px; margin-bottom: 30px; }
              .screenshot-container { flex: 1; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
              .screenshot { border: 2px solid #ddd; border-radius: 5px; margin: 10px 0; }
              .info { background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 10px 0; }
              .analysis { background: #e8f4fd; padding: 15px; border-radius: 5px; margin: 15px 0; }
              .changes { background: #fff3cd; padding: 15px; border-radius: 5px; margin: 15px 0; }
              h1 { color: #333; }
              h2 { color: #666; border-bottom: 2px solid #007bff; padding-bottom: 5px; }
              img { max-width: 100%; height: auto; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ UI —Ç–µ—Å—Ç–∞</h1>
                <p>–ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—Ö–æ–¥–∞</p>
              </div>
              
              <div class="comparison">
                <div class="screenshot-container">
                  <h2>üì± ${screenshotData[0].description}</h2>
                  <div class="info">
                    <p><strong>–§–∞–π–ª:</strong> ${screenshotData[0].name}</p>
                    <p><strong>–†–∞–∑–º–µ—Ä:</strong> ${screenshotData[0].fileSize} KB</p>
                    <p><strong>–î–∞—Ç–∞:</strong> ${screenshotData[0].creationDate}</p>
                  </div>
                  <div class="screenshot">
                    <img src="data:image/png;base64,${screenshotData[0].base64}" />
                  </div>
                  <div class="analysis">
                    <h3>üîç –ß—Ç–æ –∏—â–µ–º:</h3>
                    <ul>
                      <li>–ö–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É" –∏–ª–∏ "Login"</li>
                      <li>–õ–æ–≥–æ—Ç–∏–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</li>
                      <li>–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é</li>
                      <li>–ö–æ–Ω—Ç–µ–Ω—Ç –ª–µ–Ω—Ç—ã</li>
                      <li>–ë–æ–∫–æ–≤—ã–µ –ø–∞–Ω–µ–ª–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</li>
                    </ul>
                  </div>
                </div>
                
                <div class="screenshot-container">
                  <h2>üîÑ ${screenshotData[1].description}</h2>
                  <div class="info">
                    <p><strong>–§–∞–π–ª:</strong> ${screenshotData[1].name}</p>
                    <p><strong>–†–∞–∑–º–µ—Ä:</strong> ${screenshotData[1].fileSize} KB</p>
                    <p><strong>–î–∞—Ç–∞:</strong> ${screenshotData[1].creationDate}</p>
                  </div>
                  <div class="screenshot">
                    <img src="data:image/png;base64,${screenshotData[1].base64}" />
                  </div>
                  <div class="analysis">
                    <h3>üîç –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:</h3>
                    <ul>
                      <li>–ü–æ—è–≤–∏–ª—Å—è –ª–∏ –¥–∏–∞–ª–æ–≥ –≤—Ö–æ–¥–∞?</li>
                      <li>–ï—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ Email?</li>
                      <li>–ò–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å?</li>
                      <li>–ü–æ–∫–∞–∑–∞–Ω—ã –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏?</li>
                    </ul>
                  </div>
                </div>
              </div>
              
              <div class="changes">
                <h2>üí° –ö–ª—é—á–µ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:</h2>
                <ol>
                  <li><strong>–ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞:</strong> –í–∏–¥–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É" –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–µ?</li>
                  <li><strong>–î–∏–∞–ª–æ–≥ –≤—Ö–æ–¥–∞:</strong> –ü–æ—è–≤–∏–ª—Å—è –ª–∏ –¥–∏–∞–ª–æ–≥ —Å –≤—ã–±–æ—Ä–æ–º —Å–ø–æ—Å–æ–±–∞ –≤—Ö–æ–¥–∞ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞?</li>
                  <li><strong>–ö–Ω–æ–ø–∫–∞ Email:</strong> –ï—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ Email –≤ –¥–∏–∞–ª–æ–≥–µ?</li>
                  <li><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</strong> –í–∏–¥–Ω—ã –ª–∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ø—Ä–∞–≤–æ–π –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏?</li>
                  <li><strong>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> –ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –Ω–∞—á–∞–ª–∞ —á–∞—Ç–∞?</li>
                </ol>
              </div>
              
              <div class="analysis">
                <h2>üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–∞:</h2>
                <ol>
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∫–Ω–æ–ø–æ–∫ –≤ —Ç–µ—Å—Ç–µ</li>
                  <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ</li>
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</li>
                  <li>–î–æ–±–∞–≤—å—Ç–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</li>
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏ JavaScript</li>
                </ol>
              </div>
            </div>
          </body>
        </html>
      `);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –æ—Ç—á–µ—Ç
      const htmlContent = await page.content();
      const reportPath = './test_screenshots/screenshots_comparison.html';
      fs.writeFileSync(reportPath, htmlContent);
      console.log(`\nüìÑ HTML –æ—Ç—á–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);
      
    }
    
    console.log('\n‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ HTML –æ—Ç—á–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    console.log('2. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏');
    console.log('3. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –ø–æ—á–µ–º—É —Ç–µ—Å—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–∫—Ä–∏–ø—Ç–µ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

compareScreenshots().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
}); 