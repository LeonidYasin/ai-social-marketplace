import React, { useState } from 'react';
import { api } from '../config/api';

const AdminPanel = () => {
  const [password, setPassword] = useState('');
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState('');
  const [dbInfo, setDbInfo] = useState(null);

  const handleAuthenticate = async () => {
    if (!password) {
      setMessage('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(`${api.baseURL}/admin/database-info`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ password })
      });

      if (response.ok) {
        const data = await response.json();
        setDbInfo(data);
        setIsAuthenticated(true);
        setMessage('–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      } else {
        setMessage('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
      }
    } catch (error) {
      setMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const handleFixDatabase = async () => {
    setLoading(true);
    try {
      const response = await fetch(`${api.baseURL}/admin/fix-database`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ password })
      });

      const data = await response.json();
      
      if (response.ok) {
        setMessage('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ë–î
        handleAuthenticate();
      } else {
        setMessage('–û—à–∏–±–∫–∞: ' + data.message);
      }
    } catch (error) {
      setMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const handleRecreateNotifications = async () => {
    if (!confirm('–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(`${api.baseURL}/admin/recreate-notifications`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ password })
      });

      const data = await response.json();
      
      if (response.ok) {
        setMessage('–¢–∞–±–ª–∏—Ü–∞ notifications —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞!');
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ë–î
        handleAuthenticate();
      } else {
        setMessage('–û—à–∏–±–∫–∞: ' + data.message);
      }
    } catch (error) {
      setMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  if (!isAuthenticated) {
    return (
      <div className="admin-panel" style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>
        <h2>üîß –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å</h2>
        <div style={{ marginBottom: '20px' }}>
          <label style={{ display: 'block', marginBottom: '10px' }}>
            –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
          </label>
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={{
              width: '100%',
              padding: '10px',
              border: '1px solid #ddd',
              borderRadius: '4px',
              marginBottom: '10px'
            }}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
          />
          <button
            onClick={handleAuthenticate}
            disabled={loading}
            style={{
              padding: '10px 20px',
              backgroundColor: '#007bff',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              cursor: loading ? 'not-allowed' : 'pointer'
            }}
          >
            {loading ? '–ü—Ä–æ–≤–µ—Ä–∫–∞...' : '–í–æ–π—Ç–∏'}
          </button>
        </div>
        {message && (
          <div style={{
            padding: '10px',
            backgroundColor: message.includes('–û—à–∏–±–∫–∞') ? '#f8d7da' : '#d4edda',
            border: '1px solid ' + (message.includes('–û—à–∏–±–∫–∞') ? '#f5c6cb' : '#c3e6cb'),
            borderRadius: '4px',
            color: message.includes('–û—à–∏–±–∫–∞') ? '#721c24' : '#155724'
          }}>
            {message}
          </div>
        )}
      </div>
    );
  }

  return (
    <div className="admin-panel" style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>
      <h2>üîß –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</h2>
      
      <div style={{ marginBottom: '20px' }}>
        <button
          onClick={() => setIsAuthenticated(false)}
          style={{
            padding: '5px 10px',
            backgroundColor: '#6c757d',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: 'pointer'
          }}
        >
          –í—ã–π—Ç–∏
        </button>
      </div>

      {dbInfo && (
        <div style={{ marginBottom: '20px' }}>
          <h3>üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</h3>
          <div style={{ marginBottom: '10px' }}>
            <strong>–¢–∞–±–ª–∏—Ü—ã:</strong> {dbInfo.tables.join(', ')}
          </div>
          
          <h4>–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã notifications:</h4>
          <table style={{ width: '100%', borderCollapse: 'collapse', marginBottom: '20px' }}>
            <thead>
              <tr style={{ backgroundColor: '#f8f9fa' }}>
                <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>–ö–æ–ª–æ–Ω–∫–∞</th>
                <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>–¢–∏–ø</th>
                <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>Null</th>
                <th style={{ border: '1px solid #ddd', padding: '8px', textAlign: 'left' }}>–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</th>
              </tr>
            </thead>
            <tbody>
              {dbInfo.notificationsStructure.map((column, index) => (
                <tr key={index}>
                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{column.column_name}</td>
                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{column.data_type}</td>
                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{column.is_nullable}</td>
                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>{column.column_default || '-'}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}

      <div style={{ marginBottom: '20px' }}>
        <h3>üõ†Ô∏è –î–µ–π—Å—Ç–≤–∏—è</h3>
        
        <div style={{ marginBottom: '15px' }}>
          <button
            onClick={handleFixDatabase}
            disabled={loading}
            style={{
              padding: '10px 20px',
              backgroundColor: '#28a745',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              cursor: loading ? 'not-allowed' : 'pointer',
              marginRight: '10px'
            }}
          >
            {loading ? '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...' : '–ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î'}
          </button>
          <span style={{ fontSize: '14px', color: '#666' }}>
            –î–æ–±–∞–≤–∏—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É notifications
          </span>
        </div>

        <div style={{ marginBottom: '15px' }}>
          <button
            onClick={handleRecreateNotifications}
            disabled={loading}
            style={{
              padding: '10px 20px',
              backgroundColor: '#dc3545',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              cursor: loading ? 'not-allowed' : 'pointer',
              marginRight: '10px'
            }}
          >
            {loading ? '–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ...' : '–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É notifications'}
          </button>
          <span style={{ fontSize: '14px', color: '#666' }}>
            –£–¥–∞–ª–∏—Ç –∏ —Å–æ–∑–¥–∞—Å—Ç –∑–∞–Ω–æ–≤–æ —Ç–∞–±–ª–∏—Ü—É notifications (–í–ù–ò–ú–ê–ù–ò–ï: —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!)
          </span>
        </div>
      </div>

      {message && (
        <div style={{
          padding: '10px',
          backgroundColor: message.includes('–û—à–∏–±–∫–∞') ? '#f8d7da' : '#d4edda',
          border: '1px solid ' + (message.includes('–û—à–∏–±–∫–∞') ? '#f5c6cb' : '#c3e6cb'),
          borderRadius: '4px',
          color: message.includes('–û—à–∏–±–∫–∞') ? '#721c24' : '#155724'
        }}>
          {message}
        </div>
      )}
    </div>
  );
};

export default AdminPanel; 