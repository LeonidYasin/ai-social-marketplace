const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

async function analyzeFirstScreenshot() {
  console.log('üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...');
  
  let browser;
  let page;
  
  try {
    browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });

    page = await browser.newPage();
    
    const screenshot = 'final_01_initial.png';
    const filePath = path.join('./test_screenshots', screenshot);
    
    if (fs.existsSync(filePath)) {
      console.log(`\nüì∏ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: ${screenshot}`);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
      const imageBuffer = fs.readFileSync(filePath);
      const base64Image = imageBuffer.toString('base64');
      
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      await page.setContent(`
        <html>
          <head>
            <style>
              body { margin: 0; padding: 20px; font-family: Arial, sans-serif; }
              .container { max-width: 800px; margin: 0 auto; }
              .screenshot { border: 2px solid #ccc; margin: 20px 0; }
              .info { background: #f5f5f5; padding: 15px; border-radius: 5px; }
              .analysis { background: #e8f4fd; padding: 15px; border-radius: 5px; margin: 15px 0; }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>–ê–Ω–∞–ª–∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: ${screenshot}</h1>
              
              <div class="info">
                <h3>üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
                <p><strong>–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</strong> <span id="dimensions"></span></p>
                <p><strong>–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:</strong> <span id="fileSize"></span></p>
                <p><strong>–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:</strong> ${filePath}</p>
                <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> <span id="creationDate"></span></p>
              </div>
              
              <div class="screenshot">
                <img src="data:image/png;base64,${base64Image}" style="max-width: 100%; height: auto;" />
              </div>
              
              <div class="analysis">
                <h3>üîç –í–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑:</h3>
                <p><strong>–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ:</strong> –ú–æ–±–∏–ª—å–Ω–æ–µ (375x667)</p>
                <p><strong>–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è:</strong> –ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è</p>
                <p><strong>–û–∂–∏–¥–∞–µ–º–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:</strong> –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
                <p><strong>–ö–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞:</strong></p>
                <ul>
                  <li>–ö–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É" –∏–ª–∏ "Login"</li>
                  <li>–õ–æ–≥–æ—Ç–∏–ø –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</li>
                  <li>–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é</li>
                  <li>–ö–æ–Ω—Ç–µ–Ω—Ç –ª–µ–Ω—Ç—ã –∏–ª–∏ –ø–æ—Å—Ç–æ–≤</li>
                  <li>–ë–æ–∫–æ–≤—ã–µ –ø–∞–Ω–µ–ª–∏</li>
                </ul>
              </div>
              
              <div class="analysis">
                <h3>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
                <ol>
                  <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</li>
                  <li>–ù–∞–π–¥–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É</li>
                  <li>–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–ª–∏–∫–∞</li>
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤</li>
                  <li>–°—Ä–∞–≤–Ω–∏—Ç–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º –¥–∏–∑–∞–π–Ω–æ–º</li>
                </ol>
              </div>
            </div>
          </body>
        </html>
      `);
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
      const imageInfo = await page.evaluate(() => {
        const img = document.querySelector('img');
        const dimensions = document.getElementById('dimensions');
        const fileSize = document.getElementById('fileSize');
        const creationDate = document.getElementById('creationDate');
        
        dimensions.textContent = `${img.naturalWidth}x${img.naturalHeight}`;
        fileSize.textContent = '32.8 KB'; // –ò–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        creationDate.textContent = new Date().toLocaleString();
        
        return {
          width: img.naturalWidth,
          height: img.naturalHeight,
          src: img.src.substring(0, 100) + '...'
        };
      });
      
      console.log(`   üìê –†–∞–∑–º–µ—Ä: ${imageInfo.width}x${imageInfo.height}`);
      console.log(`   üìÅ –§–∞–π–ª: ${filePath}`);
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
      const stats = fs.statSync(filePath);
      console.log(`   üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(stats.size / 1024).toFixed(1)} KB`);
      console.log(`   üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${stats.birthtime.toLocaleString()}`);
      
      console.log('\nüîç –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:');
      console.log('   üì± –≠—Ç–æ –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è (375x667)');
      console.log('   üéØ –û–∂–∏–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–Ω–æ–ø–∫–æ–π –≤—Ö–æ–¥–∞');
      console.log('   üîç –ò—â–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –æ—Ç—á–µ—Ç
      const htmlContent = await page.content();
      const reportPath = './test_screenshots/first_screenshot_analysis.html';
      fs.writeFileSync(reportPath, htmlContent);
      console.log(`\nüìÑ HTML –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);
      
    } else {
      console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${screenshot}`);
    }
    
    console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ HTML –æ—Ç—á–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
    console.log('2. –ù–∞–π–¥–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É" –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ');
    console.log('3. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–ª–∏–∫–∞ –≤ —Ç–µ—Å—Ç–µ');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

analyzeFirstScreenshot().catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
}); 