const puppeteer = require('puppeteer');

async function testLogoutFunctionality() {
  const browser = await puppeteer.launch({ 
    headless: false, 
    defaultViewport: null,
    args: ['--start-maximized']
  });
  
  const page = await browser.newPage();
  
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...');
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto('http://localhost:3000');
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
    const currentUser = await page.evaluate(() => {
      return localStorage.getItem('currentUser');
    });
    
    if (!currentUser) {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Å–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–µ–º –≤ —Å–∏—Å—Ç–µ–º—É...');
      
      // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –≤—Ö–æ–¥–∞
      await page.click('[data-testid="profile-button"]');
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –ù–∞–∂–∏–º–∞–µ–º "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"
      const guestButton = await page.$x("//button[contains(text(), '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å')]");
      if (guestButton.length > 0) {
        await guestButton[0].click();
        await new Promise(resolve => setTimeout(resolve, 2000));
        console.log('‚úÖ –í–æ—à–ª–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
      } else {
        console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }
    } else {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    const userAfterLogin = await page.evaluate(() => {
      return localStorage.getItem('currentUser');
    });
    
    if (!userAfterLogin) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞');
      return;
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', JSON.parse(userAfterLogin).name);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    const token = await page.evaluate(() => {
      return localStorage.getItem('authToken');
    });
    
    if (token) {
      console.log('‚úÖ –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω');
    } else {
      console.log('‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –¢–µ—Å—Ç: –í—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
    console.log('\nüîç –¢–µ—Å—Ç: –í—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
    await page.click('[data-testid="profile-button"]');
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏" –≤ –¥–∏–∞–ª–æ–≥–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const settingsLogoutButton = await page.$x("//button[contains(text(), '–í—ã–π—Ç–∏')]");
    
    if (settingsLogoutButton.length > 0) {
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏" –Ω–∞–π–¥–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è');
      
      // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
      await settingsLogoutButton[0].click();
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—è–≤–∏–ª—Å—è –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      const confirmDialog = await page.$x("//div[@role='dialog'][contains(text(), '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞')]");
      
      if (confirmDialog.length > 0) {
        console.log('‚úÖ –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ –ø–æ—è–≤–∏–ª—Å—è');
        
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤—ã—Ö–æ–¥
        const confirmButton = await page.$x("//button[contains(text(), '–í—ã–π—Ç–∏')]");
        if (confirmButton.length > 0) {
          await confirmButton[0].click();
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª
          const userAfterConfirmLogout = await page.evaluate(() => {
            return localStorage.getItem('currentUser');
          });
          
          const tokenAfterConfirmLogout = await page.evaluate(() => {
            return localStorage.getItem('authToken');
          });
          
          if (!userAfterConfirmLogout && !tokenAfterConfirmLogout) {
            console.log('‚úÖ –í—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
          } else {
            console.log('‚ùå –í—ã—Ö–æ–¥ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω');
          }
        }
      } else {
        console.log('‚ùå –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è');
      }
    } else {
      console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è');
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await browser.close();
  }
}

testLogoutFunctionality(); 