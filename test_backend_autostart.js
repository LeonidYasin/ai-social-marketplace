const puppeteer = require('puppeteer');

async function testBackendAutoStart() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n');

  let browser;
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    browser = await puppeteer.launch({
      headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      defaultViewport: { width: 1200, height: 800 }
    });

    const page = await browser.newPage();
    
    // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏
    page.on('console', msg => {
      if (msg.type() === 'log') {
        console.log(`üì± –ë—Ä–∞—É–∑–µ—Ä: ${msg.text()}`);
      }
    });

    console.log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥...');
    await page.goto('http://localhost:3000', { waitUntil: 'networkidle2' });

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForTimeout(3000);

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±—ç–∫–µ–Ω–¥—É...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
    const errorNotifications = await page.evaluate(() => {
      const notifications = document.querySelectorAll('.error-notification');
      return Array.from(notifications).map(n => ({
        title: n.querySelector('h4')?.textContent,
        message: n.querySelector('p')?.textContent,
        severity: n.className.includes('error') ? 'error' : 
                 n.className.includes('warning') ? 'warning' : 'info'
      }));
    });

    if (errorNotifications.length > 0) {
      console.log('‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö:');
      errorNotifications.forEach((notification, index) => {
        console.log(`   ${index + 1}. ${notification.title}: ${notification.message}`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    const modals = await page.evaluate(() => {
      const modalElements = document.querySelectorAll('div[style*="position: fixed"]');
      return modalElements.length;
    });

    if (modals > 0) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –∑–∞–ø—É—Å–∫—É');
      
      // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      await page.screenshot({
        path: 'test_screenshots/backend_autostart_modal.png',
        fullPage: true
      });
      console.log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: test_screenshots/backend_autostart_modal.png');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥ –∑–∞–ø—É—Å–∫–∞...');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±—ç–∫–µ–Ω–¥—É
    await page.evaluate(() => {
      // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –Ω–∞–ø—Ä—è–º—É—é
      if (window.backendManager) {
        window.backendManager.tryAutoStartBackend();
      }
    });

    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    await page.waitForTimeout(2000);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modalContent = await page.evaluate(() => {
      const modal = document.querySelector('div[style*="position: fixed"]');
      if (modal) {
        const commands = modal.querySelectorAll('code');
        return Array.from(commands).map(cmd => cmd.textContent);
      }
      return [];
    });

    if (modalContent.length > 0) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞:');
      modalContent.forEach((cmd, index) => {
        console.log(`   ${index + 1}. ${cmd}`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∞ "–ü–æ–Ω—è—Ç–Ω–æ"
    const closeButton = await page.$('#closeModal');
    if (closeButton) {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      await closeButton.click();
      console.log('üîí –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥ –≤ –∫–æ–Ω—Å–æ–ª—å...');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ –ø–æ–∫–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    await page.evaluate(() => {
      if (window.backendManager) {
        window.backendManager.showManualStartInstructions();
      }
    });

    await page.waitForTimeout(2000);

    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    
    if (error.message.includes('net::ERR_CONNECTION_REFUSED')) {
      console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
      console.log('   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm start –≤ –ø–∞–ø–∫–µ frontend');
    }
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const fs = require('fs');
const path = require('path');

const screenshotsDir = 'test_screenshots';
if (!fs.existsSync(screenshotsDir)) {
  fs.mkdirSync(screenshotsDir);
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testBackendAutoStart(); 