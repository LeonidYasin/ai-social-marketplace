const FinalOCRBot = require('./final_ocr_bot');

async function runFixedTests() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ OCR –±–æ—Ç–∞...');
    
    const bot = new FinalOCRBot();
    
    try {
        await bot.init();
        
        // –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        console.log('\nüì± –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
        const state = await bot.analyzeCurrentState();
        console.log(`–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${state.name} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${state.confidence})`);
        
        // –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        console.log('\nüîç –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
        
        const guestButton = await bot.findElementByText('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å');
        if (guestButton) {
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"`);
        } else {
            console.log(`‚ùå –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        }
        
        const menuButton = await bot.findElementByTestId('MenuIcon');
        if (menuButton) {
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é`);
        } else {
            console.log(`‚ùå –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        }
        
        // –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
        console.log('\n‚úèÔ∏è –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞');
        const postCreated = await bot.createPost();
        if (postCreated) {
            console.log('‚úÖ –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞');
        }
        
        // –¢–µ—Å—Ç 4: –õ–∞–π–∫ –ø–æ—Å—Ç–∞
        console.log('\nüëç –¢–µ—Å—Ç 4: –õ–∞–π–∫ –ø–æ—Å—Ç–∞');
        const postLiked = await bot.likePost();
        if (postLiked) {
            console.log('‚úÖ –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ª–∞–π–∫–∞ –ø–æ—Å—Ç–∞');
        }
        
        // –¢–µ—Å—Ç 5: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
        console.log('\nüìã –¢–µ—Å—Ç 5: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é');
        const menuOpened = await bot.openMenu();
        if (menuOpened) {
            console.log('‚úÖ –ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é');
        }
        
        // –¢–µ—Å—Ç 6: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('\nüí¨ –¢–µ—Å—Ç 6: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è');
        const messageSent = await bot.sendMessage();
        if (messageSent) {
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        console.log('\nüìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...');
        const report = await bot.generateReport();
        if (report) {
            console.log('‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
        }
        
        console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
        
    } catch (error) {
        console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    } finally {
        await bot.cleanup();
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
    runFixedTests();
}

module.exports = { runFixedTests }; 