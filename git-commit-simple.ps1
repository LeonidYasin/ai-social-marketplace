param(
    [Parameter(Mandatory=$true)]
    [string]$Message,
    [Parameter(Mandatory=$false)]
    [string]$Description,
    [switch]$Push
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
if ($env:SHELL -or $env:TERM_PROGRAM -or $env:MSYSTEM) {
    Write-Output "[INFO] –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ bash –∏–ª–∏ –Ω–µ-PowerShell —Å—Ä–µ–¥—É."
    Write-Output "[INFO] –î–ª—è –∫–æ–º–º–∏—Ç–∞ –∏ –ø—É—à–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ git-–∫–æ–º–∞–Ω–¥—ã:" 
    Write-Output "    git add [—Ñ–∞–π–ª—ã]"
    Write-Output "    git commit -m '[—Å–æ–æ–±—â–µ–Ω–∏–µ]'"
    Write-Output "    git push"
    Write-Output "[INFO] –ü—Ä–∏–º–µ—Ä –¥–ª—è –≤–∞—à–µ–≥–æ —Å–ª—É—á–∞—è:" 
    Write-Output "    git add frontend/src/App.jsx frontend/src/index.js"
    Write-Output "    git commit -m '$Message\n\n$Description'"
    Write-Output "    git push"
    return
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

$logFile = "git-commit-simple.log"
function LogMsg($msg) {
    Write-Output $msg
    $msg | Out-File -FilePath $logFile -Encoding UTF8 -Append
}

# –û—á–∏—â–∞–µ–º –ª–æ–≥ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
if (Test-Path $logFile) { Remove-Item $logFile -Force }

LogMsg "üîß Git Commit Helper (non-interactive)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if (-not (Test-Path ".git")) {
    LogMsg "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
    Get-Content $logFile
    return
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
$status = git status --porcelain
if (-not $status) {
    LogMsg "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞. –í—Å—ë —á–∏—Å—Ç–æ, –ø—É—à–∏—Ç—å –Ω–µ—á–µ–≥–æ."
    Get-Content $logFile
    return
}

LogMsg "üìã –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
git status --short | ForEach-Object { LogMsg $_ }

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
git add .

# –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
if ($Description) {
    $fullMsg = "$Message`n`n$Description"
} else {
    $fullMsg = $Message
}

# –î–µ–ª–∞–µ–º –∫–æ–º–º–∏—Ç
git commit -m "$fullMsg"

if ($LASTEXITCODE -eq 0) {
    LogMsg "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω!"
    git log --oneline -1 | ForEach-Object { LogMsg $_ }
    if ($Push) {
        LogMsg "üöÄ –í—ã–ø–æ–ª–Ω—è—é git push..."
        git push | ForEach-Object { LogMsg $_ }
        if ($LASTEXITCODE -eq 0) {
            LogMsg "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä!"
        } else {
            LogMsg "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ git push. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞."
        }
    } else {
        LogMsg "‚ÑπÔ∏è –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É—à–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–ª–∞–≥ -Push."
    }
} else {
    LogMsg "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ git status –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –≤—ã—à–µ."
}

# –í –∫–æ–Ω—Ü–µ –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º –ª–æ–≥
Get-Content $logFile 