const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

async function testStep2FixedCoordinates() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —à–∞–≥–∞ 2 —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏');
  
  let browser1, browser2;
  try {
    // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä');
    browser1 = await puppeteer.launch({
      headless: false,
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page1 = await browser1.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –ø–µ—Ä–≤–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üì± –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
    await page1.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üì∏ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
    await page1.screenshot({ 
      path: './test_screenshots/step2_01_browser1_initial.png',
      fullPage: true 
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏
    console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏');
    const needsLogin1 = await page1.evaluate(() => {
      return document.body.innerText.includes('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
    });
    
    if (needsLogin1) {
      console.log('‚ö†Ô∏è –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã');
      
      // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"
      // –û—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ - –∫–Ω–æ–ø–∫–∞ –æ–±—ã—á–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ —ç–∫—Ä–∞–Ω–∞
      const guestCoords1 = { x: 640, y: 400 }; // –¶–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞ 1280x720
      
      console.log(`‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (${guestCoords1.x}, ${guestCoords1.y})`);
      
      // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
      console.log('üñ±Ô∏è –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–ª–∏–∫–∞–µ–º –ø–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º');
      await page1.mouse.click(guestCoords1.x, guestCoords1.y);
      
      // –ñ–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      await new Promise(resolve => setTimeout(resolve, 3000));
      console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
    } else {
      console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üì∏ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞');
    await page1.screenshot({ 
      path: './test_screenshots/step2_02_browser1_after_login.png',
      fullPage: true 
    });
    
    // –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userInfo1 = await page1.evaluate(() => {
      const userElement = document.querySelector('[data-testid="current-user"], .user-info, .profile-info');
      return userElement ? userElement.innerText : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    });
    console.log('üë§ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo1);
    
    // –ó–∞–ø—É—Å–∫ –≤—Ç–æ—Ä–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('\nüåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä');
    browser2 = await puppeteer.launch({
      headless: false,
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page2 = await browser2.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üì± –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
    await page2.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üì∏ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
    await page2.screenshot({ 
      path: './test_screenshots/step2_03_browser2_initial.png',
      fullPage: true 
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏ –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏');
    const needsLogin2 = await page2.evaluate(() => {
      return document.body.innerText.includes('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
    });
    
    if (needsLogin2) {
      console.log('‚ö†Ô∏è –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã');
      
      // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"
      const guestCoords2 = { x: 640, y: 400 }; // –¶–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞ 1280x720
      
      console.log(`‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (${guestCoords2.x}, ${guestCoords2.y})`);
      
      // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
      console.log('üñ±Ô∏è –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–ª–∏–∫–∞–µ–º –ø–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º');
      await page2.mouse.click(guestCoords2.x, guestCoords2.y);
      
      // –ñ–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      await new Promise(resolve => setTimeout(resolve, 3000));
      console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
    } else {
      console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üì∏ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞');
    await page2.screenshot({ 
      path: './test_screenshots/step2_04_browser2_after_login.png',
      fullPage: true 
    });
    
    // –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    const userInfo2 = await page2.evaluate(() => {
      const userElement = document.querySelector('[data-testid="current-user"], .user-info, .profile-info');
      return userElement ? userElement.innerText : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    });
    console.log('üë§ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo2);
    
    // –ò—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤ –ø–µ—Ä–≤–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
    const sidebarUsers1 = await page1.evaluate(() => {
      const sidebar = document.querySelector('[data-testid="sidebar"], .sidebar, .users-sidebar');
      if (!sidebar) return [];
      
      const userElements = sidebar.querySelectorAll('[data-testid="user-item"], .user-item, .user');
      return Array.from(userElements).map(el => el.textContent.trim()).filter(text => text.length > 0);
    });
    
    console.log('üë• –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ:', sidebarUsers1);
    
    // –ò—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
    const sidebarUsers2 = await page2.evaluate(() => {
      const sidebar = document.querySelector('[data-testid="sidebar"], .sidebar, .users-sidebar');
      if (!sidebar) return [];
      
      const userElements = sidebar.querySelectorAll('[data-testid="user-item"], .user-item, .user');
      return Array.from(userElements).map(el => el.textContent.trim()).filter(text => text.length > 0);
    });
    
    console.log('üë• –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ:', sidebarUsers2);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞
    const usersSeeEachOther = sidebarUsers1.length > 0 && sidebarUsers2.length > 0;
    if (usersSeeEachOther) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ');
    } else {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ');
    }
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    console.log('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
    await page1.screenshot({ 
      path: './test_screenshots/step2_05_browser1_final.png',
      fullPage: true 
    });
    await page2.screenshot({ 
      path: './test_screenshots/step2_06_browser2_final.png',
      fullPage: true 
    });
    
    console.log('‚úÖ –¢–µ—Å—Ç —à–∞–≥–∞ 2 –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: ${userInfo1}`);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: ${userInfo2}`);
    console.log(`   –í–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞: ${usersSeeEachOther ? '–î–∞' : '–ù–µ—Ç'}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —à–∞–≥–∞ 2:', error.message);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –æ—à–∏–±–æ–∫
    if (browser1) {
      const page1 = (await browser1.pages())[0];
      if (page1) {
        await page1.screenshot({ 
          path: './test_screenshots/step2_error_browser1.png',
          fullPage: true 
        });
      }
    }
    
    if (browser2) {
      const page2 = (await browser2.pages())[0];
      if (page2) {
        await page2.screenshot({ 
          path: './test_screenshots/step2_error_browser2.png',
          fullPage: true 
        });
      }
    }
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—ã
    if (browser1) {
      await browser1.close();
    }
    if (browser2) {
      await browser2.close();
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testStep2FixedCoordinates().catch(console.error); 