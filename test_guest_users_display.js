const puppeteer = require('puppeteer');

async function testGuestUsersDisplay() {
  console.log('üöÄ –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–æ—Å—Ç–µ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏');
  
  let browser1, browser2;
  try {
    // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä');
    browser1 = await puppeteer.launch({
      headless: false,
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page1 = await browser1.newPage();
    
    // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏
    page1.on('console', msg => console.log('üì± –ë—Ä–∞—É–∑–µ—Ä 1:', msg.text()));
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üì± –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
    await page1.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"
    console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏—â–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"');
    const guestButton1 = await page1.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      return buttons.find(btn => btn.textContent.includes('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å'));
    });
    
    if (!guestButton1) {
      console.log('‚ùå –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      const pageText = await page1.evaluate(() => document.body.innerText);
      console.log('üìã –¢–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageText.substring(0, 300));
      throw new Error('–ö–Ω–æ–ø–∫–∞ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ
    console.log('üñ±Ô∏è –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"');
    await page1.evaluate(button => button.click(), guestButton1);
    
    // –ñ–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('‚è≥ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∂–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≥–æ—Å—Ç—è');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª
    const userInfo1 = await page1.evaluate(() => {
      const userElement = document.querySelector('[data-testid="current-user"], .user-info, .profile-info');
      return userElement ? userElement.innerText : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    });
    console.log('üë§ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo1);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å');
    const rightPanelUsers = await page1.evaluate(() => {
      const userItems = document.querySelectorAll('[data-testid="user-item"]');
      return Array.from(userItems).map(item => ({
        id: item.getAttribute('data-user-id'),
        name: item.querySelector('[data-testid="user-name"]')?.textContent || '–ë–µ–∑ –∏–º–µ–Ω–∏',
        isMe: !!item.querySelector('[data-testid="user-me"]')
      }));
    });
    
    console.log('üë• –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏:', rightPanelUsers);
    
    // –ó–∞–ø—É—Å–∫ –≤—Ç–æ—Ä–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('\nüåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä');
    browser2 = await puppeteer.launch({
      headless: false,
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page2 = await browser2.newPage();
    
    // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏
    page2.on('console', msg => console.log('üì± –ë—Ä–∞—É–∑–µ—Ä 2:', msg.text()));
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üì± –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
    await page2.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"
    console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏—â–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"');
    const guestButton2 = await page2.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      return buttons.find(btn => btn.textContent.includes('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å'));
    });
    
    if (!guestButton2) {
      console.log('‚ùå –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      throw new Error('–ö–Ω–æ–ø–∫–∞ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
    }
    
    // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ
    console.log('üñ±Ô∏è –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"');
    await page2.evaluate(button => button.click(), guestButton2);
    
    // –ñ–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('‚è≥ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∂–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≥–æ—Å—Ç—è');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª
    const userInfo2 = await page2.evaluate(() => {
      const userElement = document.querySelector('[data-testid="current-user"], .user-info, .profile-info');
      return userElement ? userElement.innerText : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    });
    console.log('üë§ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo2);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤—É—é –ø–∞–Ω–µ–ª—å');
    const rightPanelUsers2 = await page2.evaluate(() => {
      const userItems = document.querySelectorAll('[data-testid="user-item"]');
      return Array.from(userItems).map(item => ({
        id: item.getAttribute('data-user-id'),
        name: item.querySelector('[data-testid="user-name"]')?.textContent || '–ë–µ–∑ –∏–º–µ–Ω–∏',
        isMe: !!item.querySelector('[data-testid="user-me"]')
      }));
    });
    
    console.log('üë• –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏:', rightPanelUsers2);
    
    // –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    console.log('\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
    console.log(`–ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: ${rightPanelUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`–í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: ${rightPanelUsers2.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    if (rightPanelUsers.length > 0 && rightPanelUsers2.length > 0) {
      console.log('‚úÖ –û–±–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –≤–∏–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥—è—Ç –ª–∏ –æ–Ω–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞
      const users1 = rightPanelUsers.map(u => u.name);
      const users2 = rightPanelUsers2.map(u => u.name);
      
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ 1:', users1);
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ 2:', users2);
      
      // –ò—â–µ–º –æ–±—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const commonUsers = users1.filter(name => users2.includes(name));
      console.log('–û–±—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', commonUsers);
      
      if (commonUsers.length > 0) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞!');
      } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ù–ï –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞');
      }
    } else {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏');
    }
    
    // –ñ–¥–µ–º –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    console.log('‚è≥ –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...');
    await new Promise(resolve => setTimeout(resolve, 10000));
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error.message);
  } finally {
    if (browser1) await browser1.close();
    if (browser2) await browser2.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testGuestUsersDisplay(); 