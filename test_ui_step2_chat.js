const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

async function testStep2Chat() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —à–∞–≥–∞ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
  
  let browser1, browser2;
  try {
    // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä');
    browser1 = await puppeteer.launch({
      headless: false,
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page1 = await browser1.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –ø–µ—Ä–≤–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üì± –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
    await page1.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üì∏ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
    await page1.screenshot({ 
      path: './test_screenshots/step2_01_browser1_initial.png',
      fullPage: true 
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
    const isLoggedIn1 = await page1.evaluate(() => {
      const feedElement = document.querySelector('[data-testid="feed"], .feed, .posts-container');
      const welcomeText = document.body.innerText.includes('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
      return !!feedElement && !welcomeText;
    });
    
    if (!isLoggedIn1) {
      console.log('‚ö†Ô∏è –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
      
      // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"
      const guestButton1 = await page1.evaluate(() => {
        const walker = document.createTreeWalker(
          document.body,
          NodeFilter.SHOW_TEXT,
          null,
          false
        );
        
        let node;
        while (node = walker.nextNode()) {
          if (node.textContent.includes('–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨')) {
            return node.parentElement;
          }
        }
        return null;
      });
      
      if (guestButton1) {
        console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"');
        await page1.evaluate((element) => element.click(), guestButton1);
        await new Promise(resolve => setTimeout(resolve, 3000));
        console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –≤–æ—à–ª–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
      } else {
        console.log('‚ùå –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å –≤ –ø–µ—Ä–≤–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
      }
    }
    
    console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    
    // –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userInfo1 = await page1.evaluate(() => {
      const userElement = document.querySelector('[data-testid="current-user"], .user-info, .profile-info');
      return userElement ? userElement.innerText : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    });
    console.log('üë§ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo1);
    
    // –ò—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∏—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
    const sidebarUsers1 = await page1.evaluate(() => {
      const sidebar = document.querySelector('[data-testid="sidebar"], .sidebar, .users-sidebar');
      if (!sidebar) return [];
      
      const userElements = sidebar.querySelectorAll('[data-testid="user-item"], .user-item, .user');
      return Array.from(userElements).map(el => el.textContent.trim()).filter(text => text.length > 0);
    });
    
    console.log('üë• –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ:', sidebarUsers1);
    
    // –ó–∞–ø—É—Å–∫ –≤—Ç–æ—Ä–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('\nüåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä');
    browser2 = await puppeteer.launch({
      headless: false,
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page2 = await browser2.newPage();
    
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üì± –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
    await page2.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üì∏ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
    await page2.screenshot({ 
      path: './test_screenshots/step2_02_browser2_initial.png',
      fullPage: true 
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
    const isLoggedIn2 = await page2.evaluate(() => {
      const feedElement = document.querySelector('[data-testid="feed"], .feed, .posts-container');
      const welcomeText = document.body.innerText.includes('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
      return !!feedElement && !welcomeText;
    });
    
    if (!isLoggedIn2) {
      console.log('‚ö†Ô∏è –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
      
      // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"
      const guestButton2 = await page2.evaluate(() => {
        const walker = document.createTreeWalker(
          document.body,
          NodeFilter.SHOW_TEXT,
          null,
          false
        );
        
        let node;
        while (node = walker.nextNode()) {
          if (node.textContent.includes('–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨')) {
            return node.parentElement;
          }
        }
        return null;
      });
      
      if (guestButton2) {
        console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"');
        await page2.evaluate((element) => element.click(), guestButton2);
        await new Promise(resolve => setTimeout(resolve, 3000));
        console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –≤–æ—à–ª–∏ –∫–∞–∫ –≥–æ—Å—Ç—å');
      } else {
        console.log('‚ùå –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
      }
    }
    
    console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    
    // –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    const userInfo2 = await page2.evaluate(() => {
      const userElement = document.querySelector('[data-testid="current-user"], .user-info, .profile-info');
      return userElement ? userElement.innerText : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    });
    console.log('üë§ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo2);
    
    // –ò—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∏—â–µ–º —Å–∞–π–¥–±–∞—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
    const sidebarUsers2 = await page2.evaluate(() => {
      const sidebar = document.querySelector('[data-testid="sidebar"], .sidebar, .users-sidebar');
      if (!sidebar) return [];
      
      const userElements = sidebar.querySelectorAll('[data-testid="user-item"], .user-item, .user');
      return Array.from(userElements).map(el => el.textContent.trim()).filter(text => text.length > 0);
    });
    
    console.log('üë• –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ:', sidebarUsers2);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞
    const usersSeeEachOther = sidebarUsers1.length > 0 && sidebarUsers2.length > 0;
    if (usersSeeEachOther) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ');
    } else {
      console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –≤–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ');
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —á–∞—Ç –≤ –ø–µ—Ä–≤–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üí¨ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —á–∞—Ç');
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–ª–∏–∫–∞
    const chatButton1 = await page1.evaluate(() => {
      const chatButtons = document.querySelectorAll('[data-testid="chat-button"], .chat-button, .start-chat');
      if (chatButtons.length > 0) {
        return chatButtons[0];
      }
      
      // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∞–π–¥–±–∞—Ä–µ –¥–ª—è –∫–ª–∏–∫–∞
      const userItems = document.querySelectorAll('[data-testid="user-item"], .user-item, .user');
      if (userItems.length > 0) {
        return userItems[0];
      }
      
      return null;
    });
    
    if (chatButton1) {
      console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      
      // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ —á–∞—Ç–∞
      await page1.evaluate((button) => button.click(), chatButton1);
      
      // –ñ–¥–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
      await page1.screenshot({ 
        path: './test_screenshots/step2_03_browser1_after_chat_click.png',
        fullPage: true 
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã–ª—Å—è –ª–∏ —á–∞—Ç
      const chatOpened1 = await page1.evaluate(() => {
        const chatWindow = document.querySelector('[data-testid="chat-window"], .chat-window, .chat-dialog');
        return !!chatWindow;
      });
      
      if (chatOpened1) {
        console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: —á–∞—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç');
      } else {
        console.log('‚ö†Ô∏è –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: —á–∞—Ç –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è');
      }
    } else {
      console.log('‚ùå –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —á–∞—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üí¨ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å —á–∞—Ç');
    
    const chatButton2 = await page2.evaluate(() => {
      const chatButtons = document.querySelectorAll('[data-testid="chat-button"], .chat-button, .start-chat');
      if (chatButtons.length > 0) {
        return chatButtons[0];
      }
      
      // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∞–π–¥–±–∞—Ä–µ –¥–ª—è –∫–ª–∏–∫–∞
      const userItems = document.querySelectorAll('[data-testid="user-item"], .user-item, .user');
      if (userItems.length > 0) {
        return userItems[0];
      }
      
      return null;
    });
    
    if (chatButton2) {
      console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      
      // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ —á–∞—Ç–∞
      await page2.evaluate((button) => button.click(), chatButton2);
      
      // –ñ–¥–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞
      await page2.screenshot({ 
        path: './test_screenshots/step2_04_browser2_after_chat_click.png',
        fullPage: true 
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã–ª—Å—è –ª–∏ —á–∞—Ç
      const chatOpened2 = await page2.evaluate(() => {
        const chatWindow = document.querySelector('[data-testid="chat-window"], .chat-window, .chat-dialog');
        return !!chatWindow;
      });
      
      if (chatOpened2) {
        console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: —á–∞—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç');
      } else {
        console.log('‚ö†Ô∏è –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: —á–∞—Ç –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è');
      }
    } else {
      console.log('‚ùå –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ —á–∞—Ç–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    console.log('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏...');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
    await page1.screenshot({ 
      path: './test_screenshots/step2_05_browser1_final.png',
      fullPage: true 
    });
    await page2.screenshot({ 
      path: './test_screenshots/step2_06_browser2_final.png',
      fullPage: true 
    });
    
    console.log('‚úÖ –¢–µ—Å—Ç —à–∞–≥–∞ 2 –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: ${userInfo1}`);
    console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: ${userInfo2}`);
    console.log(`   –í–∏–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞: ${usersSeeEachOther ? '–î–∞' : '–ù–µ—Ç'}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —à–∞–≥–∞ 2:', error.message);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –æ—à–∏–±–æ–∫
    if (browser1) {
      const page1 = (await browser1.pages())[0];
      if (page1) {
        await page1.screenshot({ 
          path: './test_screenshots/step2_error_browser1.png',
          fullPage: true 
        });
      }
    }
    
    if (browser2) {
      const page2 = (await browser2.pages())[0];
      if (page2) {
        await page2.screenshot({ 
          path: './test_screenshots/step2_error_browser2.png',
          fullPage: true 
        });
      }
    }
  } finally {
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—ã
    if (browser1) {
      await browser1.close();
    }
    if (browser2) {
      await browser2.close();
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testStep2Chat().catch(console.error); 