const IntelligentScreenshotGenerator = require('./intelligent_screenshot_generator');

(async () => {
    const generator = new IntelligentScreenshotGenerator();
    try {
        await generator.init();
        await generator.navigateTo('http://localhost:3000');

        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ OCR...');

        // –°—Ü–µ–Ω–∞—Ä–∏–π: —Ç–µ—Å—Ç OCR
        generator.setScenario('ocr_test');
        generator.setPanel('ocr_verification');

        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ OCR
        const screenshotPath = await generator.takeScreenshot('ocr_test_initial');
        console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è OCR —Ç–µ—Å—Ç–∞: ${screenshotPath}`);

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ OCR
        console.log('üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ —É–ª—É—á—à–µ–Ω–Ω—ã–π OCR...');
        const ocrText = await generator.extractTextFromImage(screenshotPath);
        
        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${ocrText.length} —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ —á–µ—Ä–µ–∑ OCR:`);
        ocrText.forEach((item, index) => {
            console.log(`  ${index + 1}. "${item.text}" (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${item.confidence}%, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${item.centerX}, ${item.centerY})`);
        });

        // –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"
        const guestButton = ocrText.filter(item => {
            const text = item.text?.toLowerCase() || '';
            return text.includes('–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å') && text.includes('–≥–æ—Å—Ç—å');
        });

        if (guestButton.length > 0) {
            console.log('‚úÖ OCR —É—Å–ø–µ—à–Ω–æ –Ω–∞—à–µ–ª –∫–Ω–æ–ø–∫—É "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å":');
            guestButton.forEach((item, index) => {
                console.log(`  ${index + 1}. "${item.text}" (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${item.confidence}%, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${item.centerX}, ${item.centerY})`);
            });

            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ —á–µ—Ä–µ–∑ OCR –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            console.log('üñ±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞ —á–µ—Ä–µ–∑ OCR –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã...');
            const target = guestButton[0];
            await generator.page.mouse.click(target.centerX, target.centerY);
            console.log(`‚úÖ –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (${target.centerX}, ${target.centerY})`);

            // –ñ–¥–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            await generator.pause(2000, '–ø–æ—Å–ª–µ OCR –∫–ª–∏–∫–∞');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            const afterState = await generator.analyzeScreenState('after_ocr_click');
            console.log(`üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ OCR –∫–ª–∏–∫–∞: ${afterState.state.name}`);
            
        } else {
            console.log('‚ùå OCR –Ω–µ –Ω–∞—à–µ–ª –∫–Ω–æ–ø–∫—É "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –∏–ª–∏ "–≥–æ—Å—Ç—å"
            const relatedElements = ocrText.filter(item => {
                const text = item.text?.toLowerCase() || '';
                return text.includes('–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å') || text.includes('–≥–æ—Å—Ç—å');
            });
            
            if (relatedElements.length > 0) {
                console.log('üîç –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ö–æ–∂–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:');
                relatedElements.forEach((item, index) => {
                    console.log(`  ${index + 1}. "${item.text}" (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${item.confidence}%)`);
                });
            }
        }

        await generator.close();
        console.log('‚úÖ OCR —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
        
    } catch (error) {
        await generator.handleError(error, 'ocr_test');
        process.exit(1);
    }
})(); 