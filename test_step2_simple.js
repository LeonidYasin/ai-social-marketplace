const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');

async function testStep2() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ —à–∞–≥–∞ 2: –í—Ö–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Ç–∞');
    
    let browser1, browser2;
    
    try {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä
        console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä');
        browser1 = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
            args: ['--start-maximized']
        });
        
        const page1 = await browser1.newPage();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç
        console.log('üì± –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
        await page1.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        console.log('üì∏ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
        await page1.screenshot({ path: 'test_screenshots/step2_simple_01_initial.png', fullPage: true });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏
        console.log('üîç –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏');
        const guestButtonText = await page1.evaluate(() => {
            const buttons = Array.from(document.querySelectorAll('button'));
            const guestButton = buttons.find(btn => btn.textContent.includes('–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨'));
            return guestButton ? guestButton.textContent : null;
        });
        
        if (guestButtonText) {
            console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"');
            
            // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç
            await page1.evaluate(() => {
                const buttons = Array.from(document.querySelectorAll('button'));
                const guestButton = buttons.find(btn => btn.textContent.includes('–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨'));
                if (guestButton) {
                    guestButton.click();
                }
            });
            
            console.log('‚úÖ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"');
            
            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            await page1.waitForTimeout(2000);
            
            // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
            console.log('üì∏ –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞');
            await page1.screenshot({ path: 'test_screenshots/step2_simple_02_after_login.png', fullPage: true });
            
        } else {
            console.log('‚ö†Ô∏è –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –≤–æ—à–ª–∏');
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä
        console.log('üåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä');
        browser2 = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
            args: ['--start-maximized']
        });
        
        const page2 = await browser2.newPage();
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç
        console.log('üì± –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ http://localhost:3000');
        await page2.goto('http://localhost:3000', { waitUntil: 'networkidle2' });
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        console.log('üì∏ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
        await page2.screenshot({ path: 'test_screenshots/step2_simple_03_browser2_initial.png', fullPage: true });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏
        console.log('üîç –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤–æ–π—Ç–∏');
        const guestButtonText2 = await page2.evaluate(() => {
            const buttons = Array.from(document.querySelectorAll('button'));
            const guestButton = buttons.find(btn => btn.textContent.includes('–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨'));
            return guestButton ? guestButton.textContent : null;
        });
        
        if (guestButtonText2) {
            console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"');
            
            // –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç
            await page2.evaluate(() => {
                const buttons = Array.from(document.querySelectorAll('button'));
                const guestButton = buttons.find(btn => btn.textContent.includes('–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨'));
                if (guestButton) {
                    guestButton.click();
                }
            });
            
            console.log('‚úÖ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨"');
            
            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            await page2.waitForTimeout(2000);
            
            // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
            console.log('üì∏ –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞');
            await page2.screenshot({ path: 'test_screenshots/step2_simple_04_browser2_after_login.png', fullPage: true });
            
        } else {
            console.log('‚ö†Ô∏è –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä: –∫–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–õ–ñ–ò–¢–¨ –ö–ê–ö –ì–û–°–¢–¨" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –≤–æ—à–ª–∏');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥—è—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥—è—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const sidebarUsers1 = await page1.evaluate(() => {
            const sidebar = document.querySelector('[data-testid="sidebar"]') || 
                          document.querySelector('.sidebar') ||
                          document.querySelector('aside');
            
            if (!sidebar) {
                return { found: false, users: [] };
            }
            
            const userElements = sidebar.querySelectorAll('[data-testid*="user"], .user-item, [class*="user"]');
            const users = Array.from(userElements).map(el => ({
                text: el.textContent.trim(),
                visible: el.offsetParent !== null
            }));
            
            return { found: true, users };
        });
        
        console.log('üìä –ü–µ—Ä–≤—ã–π –±—Ä–∞—É–∑–µ—Ä - —Å–∞–π–¥–±–∞—Ä:', sidebarUsers1);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const sidebarUsers2 = await page2.evaluate(() => {
            const sidebar = document.querySelector('[data-testid="sidebar"]') || 
                          document.querySelector('.sidebar') ||
                          document.querySelector('aside');
            
            if (!sidebar) {
                return { found: false, users: [] };
            }
            
            const userElements = sidebar.querySelectorAll('[data-testid*="user"], .user-item, [class*="user"]');
            const users = Array.from(userElements).map(el => ({
                text: el.textContent.trim(),
                visible: el.offsetParent !== null
            }));
            
            return { found: true, users };
        });
        
        console.log('üìä –í—Ç–æ—Ä–æ–π –±—Ä–∞—É–∑–µ—Ä - —Å–∞–π–¥–±–∞—Ä:', sidebarUsers2);
        
        // –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
        console.log('üì∏ –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã');
        await page1.screenshot({ path: 'test_screenshots/step2_simple_05_browser1_final.png', fullPage: true });
        await page2.screenshot({ path: 'test_screenshots/step2_simple_06_browser2_final.png', fullPage: true });
        
        console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error.message);
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏
        if (browser1) {
            const page1 = (await browser1.pages())[0];
            if (page1) {
                await page1.screenshot({ path: 'test_screenshots/step2_simple_error_browser1.png', fullPage: true });
            }
        }
        
        if (browser2) {
            const page2 = (await browser2.pages())[0];
            if (page2) {
                await page2.screenshot({ path: 'test_screenshots/step2_simple_error_browser2.png', fullPage: true });
            }
        }
    } finally {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—ã
        if (browser1) await browser1.close();
        if (browser2) await browser2.close();
    }
}

testStep2().catch(console.error); 