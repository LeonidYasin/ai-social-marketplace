const { AIEnhancedOCRBot } = require('./ai_enhanced_ocr_bot');

// –°—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ò–ò-—É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
const aiEnhancedScenarios = [
    {
        name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
        description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
        steps: [
            {
                description: '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                action: 'navigate',
                url: 'http://localhost:3000'
            },
            {
                description: '–ê–Ω–∞–ª–∏–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –ò–ò',
                action: 'screenshot',
                name: 'ai_initial_state'
            },
            {
                description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–Ω–æ–ø–∫–∏ "–ì–æ—Å—Ç—å"',
                action: 'verify',
                text: '–≥–æ—Å—Ç—å',
                context: {
                    state: '–ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
                    actions: ['click_guest', 'click_login']
                }
            },
            {
                description: '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
                action: 'pause',
                duration: 2000
            }
        ]
    },
    {
        name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≥–æ—Å—Ç—è',
        description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –∫–∞–∫ –≥–æ—Å—Ç—å',
        steps: [
            {
                description: '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                action: 'navigate',
                url: 'http://localhost:3000'
            },
            {
                description: '–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ì–æ—Å—Ç—å"',
                action: 'click',
                text: '–≥–æ—Å—Ç—å',
                options: {
                    exact: false,
                    confidence: 60
                }
            },
            {
                description: '–ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞',
                action: 'screenshot',
                name: 'ai_after_guest_login'
            },
            {
                description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ—Å—Ç–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                action: 'verify',
                text: '–ø–æ—Å—Ç',
                context: {
                    state: '–ì–æ—Å—Ç–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª',
                    actions: ['create_post', 'view_profile']
                }
            },
            {
                description: '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–µ–Ω—Ç—ã',
                action: 'pause',
                duration: 2000
            }
        ]
    },
    {
        name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞',
        description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞',
        steps: [
            {
                description: '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                action: 'navigate',
                url: 'http://localhost:3000'
            },
            {
                description: '–í—Ö–æ–¥ –∫–∞–∫ –≥–æ—Å—Ç—å',
                action: 'click',
                text: '–≥–æ—Å—Ç—å'
            },
            {
                description: '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–µ–Ω—Ç—ã',
                action: 'pause',
                duration: 2000
            },
            {
                description: '–ü–æ–∏—Å–∫ –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞',
                action: 'click',
                text: '—Å–æ–∑–¥–∞—Ç—å',
                options: {
                    exact: false,
                    confidence: 50
                }
            },
            {
                description: '–ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞',
                action: 'screenshot',
                name: 'ai_post_creation_state'
            },
            {
                description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞',
                action: 'verify',
                text: '—Å–æ–∑–¥–∞—Ç—å',
                context: {
                    state: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞',
                    actions: ['write_text', 'send_post']
                }
            }
        ]
    },
    {
        name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
        description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é',
        steps: [
            {
                description: '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                action: 'navigate',
                url: 'http://localhost:3000'
            },
            {
                description: '–í—Ö–æ–¥ –∫–∞–∫ –≥–æ—Å—Ç—å',
                action: 'click',
                text: '–≥–æ—Å—Ç—å'
            },
            {
                description: '–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏',
                action: 'pause',
                duration: 2000
            },
            {
                description: '–ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
                action: 'screenshot',
                name: 'ai_navigation_state'
            },
            {
                description: '–ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
                action: 'verify',
                text: '–ø—Ä–æ—Ñ–∏–ª—å',
                context: {
                    state: '–ì–æ—Å—Ç–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª',
                    actions: ['view_profile', 'open_chat']
                }
            },
            {
                description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —á–∞—Ç–∞',
                action: 'verify',
                text: '—á–∞—Ç',
                context: {
                    state: '–ì–æ—Å—Ç–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª',
                    actions: ['open_chat', 'send_message']
                }
            }
        ]
    },
    {
        name: '–ò–ò-–∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫',
        description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫',
        steps: [
            {
                description: '–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
                action: 'navigate',
                url: 'http://localhost:3000/nonexistent'
            },
            {
                description: '–ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–∫–∏',
                action: 'screenshot',
                name: 'ai_error_state'
            },
            {
                description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–∫–∏',
                action: 'verify',
                text: '–æ—à–∏–±–∫–∞',
                context: {
                    state: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏',
                    actions: ['retry', 'go_back']
                }
            }
        ]
    }
];

async function runAIEnhancedTests() {
    console.log('ü§ñ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ò–ò-—É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ OCR –±–æ—Ç–∞');
    console.log('=' .repeat(60));
    
    const bot = new AIEnhancedOCRBot({
        headless: false,
        slowMo: 100,
        timeout: 30000
    });
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
        const initialized = await bot.initialize();
        if (!initialized) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞');
            return;
        }
        
        const results = [];
        
        // –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        for (const scenario of aiEnhancedScenarios) {
            console.log(`\nüé¨ –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è: ${scenario.name}`);
            
            const result = await bot.runScenario(scenario, bot);
            results.push(result);
            
            // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏
            await bot.pause(2000);
        }
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        const report = await bot.generateReport(results);
        
        // –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ò-–£–õ–£–ß–®–ï–ù–ù–û–ì–û –ë–û–¢–ê');
        console.log('=' .repeat(60));
        console.log(`–í—Å–µ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: ${report.summary.totalScenarios}`);
        console.log(`–£—Å–ø–µ—à–Ω—ã—Ö: ${report.summary.successfulScenarios}`);
        console.log(`–ù–µ—É–¥–∞—á–Ω—ã—Ö: ${report.summary.failedScenarios}`);
        console.log(`–í—Å–µ–≥–æ —à–∞–≥–æ–≤: ${report.summary.totalSteps}`);
        console.log(`–£—Å–ø–µ—à–Ω—ã—Ö —à–∞–≥–æ–≤: ${report.summary.successfulSteps}`);
        console.log(`–û–±—â–µ–µ –≤—Ä–µ–º—è: ${(report.summary.totalDuration / 1000).toFixed(1)}—Å`);
        
        // –ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π
        console.log('\nüß† –ê–ù–ê–õ–ò–ó –°–û–°–¢–û–Ø–ù–ò–ô');
        console.log('=' .repeat(60));
        
        const stateCounts = {};
        bot.stateHistory.forEach(analysis => {
            const stateName = analysis.detectedState.name;
            stateCounts[stateName] = (stateCounts[stateName] || 0) + 1;
        });
        
        Object.entries(stateCounts).forEach(([state, count]) => {
            console.log(`${state}: ${count} —Ä–∞–∑`);
        });
        
        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò');
        console.log('=' .repeat(60));
        
        if (report.summary.failedScenarios > 0) {
            console.log('‚ö†Ô∏è –ï—Å—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏');
        }
        
        if (report.summary.successfulScenarios === report.summary.totalScenarios) {
            console.log('‚úÖ –í—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        }
        
        console.log('üéØ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        console.log('üìà –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error.message);
    } finally {
        await bot.cleanup();
        console.log('\nüßπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
    runAIEnhancedTests().catch(console.error);
}

module.exports = { runAIEnhancedTests, aiEnhancedScenarios }; 